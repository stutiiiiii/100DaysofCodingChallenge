class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> result ={-1,-1};
        int first = firstOccurrence(nums, target);
        int last = lastOccurrence(nums, target);

        result[0] = first;
        result[1] = last;

        return result;
        
    }
private:
    int firstOccurrence(vector<int>& arr, int key){
        int size= arr.size();
        int start =0, end = size-1 , mid= start+(end - start)/2;
        int ans =-1;
        while(start<=end){
            if(arr[mid]==key){
                ans = mid;
                end = mid -1;
            }
            else if(arr[mid]<key){
                start = mid +1;
            }
            else{
                end = mid- 1; 
            }
            mid= start+(end - start)/2;
        }
        return ans; 
    }
    int lastOccurrence(vector<int>& arr, int key){
        int size= arr.size();
        int start =0, end = size-1 , mid= start+(end - start)/2;
        int ans =-1;
        while(start<=end){
            if(arr[mid]==key){
                ans = mid;
                start = mid+1;
            }
            else if(arr[mid]<key){
                start = mid +1;
            }
            else{
                end = mid- 1; 
            }
            mid= start+(end - start)/2;
        }
        return ans; 
    }
};
